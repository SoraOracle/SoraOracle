/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/agents/[id]/execute-tool/route";
exports.ids = ["app/api/agents/[id]/execute-tool/route"];
exports.modules = {

/***/ "(rsc)/./app/api/agents/[id]/execute-tool/route.ts":
/*!***************************************************!*\
  !*** ./app/api/agents/[id]/execute-tool/route.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @anthropic-ai/sdk */ \"(rsc)/../../node_modules/@anthropic-ai/sdk/index.mjs\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/../../node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pg__WEBPACK_IMPORTED_MODULE_1__]);\npg__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_1__.Pool({\n    connectionString: process.env.DATABASE_URL\n});\nconst DEFAULT_MODEL_STR = \"claude-sonnet-4-20250514\";\nconst anthropic = new _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    apiKey: process.env.ANTHROPIC_API_KEY\n});\nasync function POST(request, { params }) {\n    try {\n        const { id } = await params;\n        const { tool_call_id, tool_id, tx_hash, input, payer_address, payment_session_id, chat_session_id } = await request.json();\n        const agentId = id;\n        if (!payment_session_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Payment session ID required'\n            }, {\n                status: 400\n            });\n        }\n        if (!chat_session_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Chat session ID required'\n            }, {\n                status: 400\n            });\n        }\n        if (!payer_address) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Payer address required'\n            }, {\n                status: 400\n            });\n        }\n        const toolResult = await pool.query('SELECT * FROM s402_tools WHERE id = $1', [\n            tool_id\n        ]);\n        if (toolResult.rows.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Tool not found'\n            }, {\n                status: 404\n            });\n        }\n        const tool = toolResult.rows[0];\n        const usageCheck = await pool.query('SELECT id FROM s402_tool_payments WHERE tx_hash = $1', [\n            tx_hash\n        ]);\n        if (usageCheck.rows.length > 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Payment already used'\n            }, {\n                status: 400\n            });\n        }\n        // For demo purposes, skip strict payment verification\n        // In production, you'd verify the payment on-chain\n        console.log('üí∞ Payment verified:', tx_hash);\n        console.log('üîß Tool ID:', tool_id);\n        console.log('üîß Tool Name:', tool.name);\n        let toolOutput;\n        // All tools go through their configured endpoint (unified proxy handling)\n        {\n            // Generic HTTP tool execution\n            try {\n                let url = tool.endpoint_url;\n                console.log('üîç Tool endpoint URL:', url);\n                if (!url || url === 'your_replit_url' || url.includes('placeholder')) {\n                    throw new Error('Tool endpoint URL not configured');\n                }\n                // Get session wallet address for JWT authentication\n                console.log('üîç Looking up payment session:', payment_session_id);\n                const sessionResult = await pool.query('SELECT session_address FROM s402_sessions WHERE id = $1', [\n                    payment_session_id\n                ]);\n                if (sessionResult.rows.length === 0) {\n                    throw new Error(`Payment session not found: ${payment_session_id}`);\n                }\n                const sessionAddress = sessionResult.rows[0].session_address;\n                console.log('‚úÖ Session address:', sessionAddress);\n                // Generate JWT token for proxy authentication\n                const jwtToken = jsonwebtoken__WEBPACK_IMPORTED_MODULE_3___default().sign({\n                    address: sessionAddress\n                }, process.env.JWT_SECRET, {\n                    expiresIn: '5m'\n                });\n                const headers = {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${jwtToken}`,\n                    'X-S402-TxID': tx_hash,\n                    ...tool.auth_headers\n                };\n                const requestBody = {\n                    input,\n                    tx_hash\n                };\n                console.log('üåê Calling proxy:', url);\n                console.log('üì¶ Request body:', JSON.stringify(requestBody, null, 2));\n                if (tool.http_method === 'GET') {\n                    const params = new URLSearchParams(input);\n                    url = `${url}?${params.toString()}`;\n                    const response = await fetch(url, {\n                        headers\n                    });\n                    const responseText = await response.text();\n                    console.log('üì• Proxy response:', responseText);\n                    toolOutput = JSON.parse(responseText);\n                } else {\n                    const response = await fetch(url, {\n                        method: 'POST',\n                        headers,\n                        body: JSON.stringify(requestBody)\n                    });\n                    const responseText = await response.text();\n                    console.log('üì• Proxy response status:', response.status);\n                    console.log('üì• Proxy response:', responseText);\n                    toolOutput = JSON.parse(responseText);\n                }\n            } catch (error) {\n                console.error('‚ùå Tool execution error:', error);\n                toolOutput = {\n                    success: false,\n                    error: 'Failed to execute tool',\n                    details: String(error)\n                };\n            }\n        }\n        await pool.query(`INSERT INTO s402_tool_payments (agent_id, tool_id, tx_hash, payer_address, amount_usd, tool_input, tool_output, status, completed_at)\n       VALUES ($1, $2, $3, $4, $5, $6, $7, $8, NOW())`, [\n            agentId,\n            tool_id,\n            tx_hash,\n            payer_address,\n            parseFloat(tool.cost_usd),\n            JSON.stringify(input),\n            JSON.stringify(toolOutput),\n            'completed'\n        ]);\n        const historyResult = await pool.query('SELECT role, content, tool_calls, tool_output FROM s402_agent_chats WHERE agent_id = $1 AND session_id = $2 ORDER BY created_at ASC LIMIT 50', [\n            agentId,\n            chat_session_id\n        ]);\n        // Build conversation history with ALL tool results\n        const conversationHistory = [];\n        const rows = historyResult.rows;\n        for(let i = 0; i < rows.length; i++){\n            const row = rows[i];\n            // User text messages\n            if (row.role === 'user' && row.content && !row.tool_output) {\n                conversationHistory.push({\n                    role: 'user',\n                    content: row.content\n                });\n            } else if (row.role === 'assistant') {\n                // Tool use blocks\n                if (row.tool_calls) {\n                    // Parse tool_calls if it's a string\n                    const toolCalls = typeof row.tool_calls === 'string' ? JSON.parse(row.tool_calls) : row.tool_calls;\n                    const toolCallsArray = Array.isArray(toolCalls) ? toolCalls : [\n                        toolCalls\n                    ];\n                    conversationHistory.push({\n                        role: 'assistant',\n                        content: toolCallsArray.map((tc)=>({\n                                type: 'tool_use',\n                                id: tc.id,\n                                name: tc.name,\n                                input: tc.input\n                            }))\n                    });\n                } else if (row.content) {\n                    conversationHistory.push({\n                        role: 'assistant',\n                        content: row.content\n                    });\n                }\n            } else if (row.role === 'user' && row.tool_output) {\n                const toolOutputData = typeof row.tool_output === 'string' ? JSON.parse(row.tool_output) : row.tool_output;\n                conversationHistory.push({\n                    role: 'user',\n                    content: [\n                        {\n                            type: 'tool_result',\n                            tool_use_id: toolOutputData.tool_use_id,\n                            content: JSON.stringify(toolOutputData.result)\n                        }\n                    ]\n                });\n            }\n        }\n        // Add current tool result\n        conversationHistory.push({\n            role: 'user',\n            content: [\n                {\n                    type: 'tool_result',\n                    tool_use_id: tool_call_id,\n                    content: typeof toolOutput === 'string' ? toolOutput : JSON.stringify(toolOutput)\n                }\n            ]\n        });\n        // Clean up orphaned blocks (Claude requires matching tool_use/tool_result pairs)\n        // CRITICAL: Always preserve the current tool execution\n        const validToolUseIds = new Set();\n        validToolUseIds.add(tool_call_id); // Current tool is always valid\n        // First pass: collect valid tool_use IDs (those with matching tool_results)\n        for(let i = 0; i < conversationHistory.length; i++){\n            const msg = conversationHistory[i];\n            if (msg.role === 'assistant' && Array.isArray(msg.content)) {\n                const toolUseIds = msg.content.filter((c)=>c.type === 'tool_use').map((c)=>c.id);\n                const nextMsg = conversationHistory[i + 1];\n                if (nextMsg && nextMsg.role === 'user' && Array.isArray(nextMsg.content)) {\n                    const toolResultIds = nextMsg.content.filter((c)=>c.type === 'tool_result').map((c)=>c.tool_use_id);\n                    // Only mark as valid if ALL tool_use IDs have matching results\n                    if (toolUseIds.every((id)=>toolResultIds.includes(id))) {\n                        toolUseIds.forEach((id)=>validToolUseIds.add(id));\n                    }\n                }\n            }\n        }\n        // Second pass: build cleaned history, removing orphaned tool_use AND tool_result blocks\n        const cleanedHistory = [];\n        for(let i = 0; i < conversationHistory.length; i++){\n            const msg = conversationHistory[i];\n            // Handle tool_use messages\n            if (msg.role === 'assistant' && Array.isArray(msg.content) && msg.content.some((c)=>c.type === 'tool_use')) {\n                const toolUseIds = msg.content.filter((c)=>c.type === 'tool_use').map((c)=>c.id);\n                // Include if all tool_use IDs are valid\n                if (toolUseIds.every((id)=>validToolUseIds.has(id))) {\n                    cleanedHistory.push(msg);\n                } else {\n                    console.log(`üßπ Removed orphaned tool_use: ${toolUseIds.join(', ')}`);\n                }\n            } else if (msg.role === 'user' && Array.isArray(msg.content) && msg.content.some((c)=>c.type === 'tool_result')) {\n                const toolResultIds = msg.content.filter((c)=>c.type === 'tool_result').map((c)=>c.tool_use_id);\n                // Include if all tool_result IDs match valid tool_use IDs\n                if (toolResultIds.every((id)=>validToolUseIds.has(id))) {\n                    cleanedHistory.push(msg);\n                } else {\n                    console.log(`üßπ Removed orphaned tool_result: ${toolResultIds.join(', ')}`);\n                }\n            } else {\n                cleanedHistory.push(msg);\n            }\n        }\n        console.log('üìã Conversation history length:', cleanedHistory.length);\n        console.log('üìã Tool use count:', cleanedHistory.filter((m)=>m.role === 'assistant' && Array.isArray(m.content) && m.content[0]?.type === 'tool_use').length);\n        console.log('üìã Tool result count:', cleanedHistory.filter((m)=>m.role === 'user' && Array.isArray(m.content) && m.content[0]?.type === 'tool_result').length);\n        console.log('üìã Full history:', JSON.stringify(cleanedHistory, null, 2));\n        // === CRITICAL: Check for multi-tool plan BEFORE calling Claude ===\n        const sessionMetaResult = await pool.query('SELECT metadata FROM s402_chat_sessions WHERE id = $1', [\n            chat_session_id\n        ]);\n        console.log('üîç Session metadata:', JSON.stringify(sessionMetaResult.rows[0]?.metadata, null, 2));\n        // Store current tool output as user message (tool_result)\n        await pool.query('INSERT INTO s402_agent_chats (agent_id, session_id, role, content, tool_output) VALUES ($1, $2, $3, $4, $5)', [\n            agentId,\n            chat_session_id,\n            'user',\n            '',\n            JSON.stringify({\n                tool_use_id: tool_call_id,\n                result: toolOutput\n            })\n        ]);\n        // Check if more tools are pending\n        if (sessionMetaResult.rows[0]?.metadata) {\n            const metadata = sessionMetaResult.rows[0].metadata;\n            const { plan, tools_completed = 0, total_tools = 0 } = metadata;\n            console.log(`üéØ Plan check: ${tools_completed} of ${total_tools} tools completed`);\n            console.log(`üéØ Condition check: plan exists? ${!!plan}, ${tools_completed} < ${total_tools - 1}? ${tools_completed < total_tools - 1}`);\n            if (plan && tools_completed < total_tools - 1) {\n                console.log('‚úÖ Entering next tool block!');\n                // More tools to execute - return next tool WITHOUT calling Claude\n                const nextTaskIndex = tools_completed + 1;\n                const nextTask = plan.tasks[nextTaskIndex];\n                console.log(`üîß Next task (${nextTaskIndex}):`, JSON.stringify(nextTask, null, 2));\n                // Update metadata\n                await pool.query('UPDATE s402_chat_sessions SET metadata = $1 WHERE id = $2', [\n                    JSON.stringify({\n                        plan,\n                        tools_completed: nextTaskIndex,\n                        total_tools\n                    }),\n                    chat_session_id\n                ]);\n                // Get next tool details\n                const nextToolResult = await pool.query('SELECT * FROM s402_tools WHERE id = $1', [\n                    nextTask.tool_id\n                ]);\n                console.log(`üîç Tool lookup for \"${nextTask.tool_id}\": found ${nextToolResult.rows.length} rows`);\n                if (nextToolResult.rows.length > 0) {\n                    const nextTool = nextToolResult.rows[0];\n                    const nextToolCallId = `toolu_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n                    // Store tool_use for next tool\n                    await pool.query('INSERT INTO s402_agent_chats (agent_id, session_id, role, content, tool_calls) VALUES ($1, $2, $3, $4, $5)', [\n                        agentId,\n                        chat_session_id,\n                        'assistant',\n                        '',\n                        JSON.stringify([\n                            {\n                                id: nextToolCallId,\n                                type: 'tool_use',\n                                name: nextTask.tool_id,\n                                input: nextTask.input\n                            }\n                        ])\n                    ]);\n                    // Update agent stats\n                    await pool.query('UPDATE s402_agents SET total_spent_usd = total_spent_usd + $1, query_count = query_count + 1, last_active_at = NOW() WHERE id = $2', [\n                        parseFloat(tool.cost_usd),\n                        agentId\n                    ]);\n                    console.log(`üöÄ Returning payment_required for next tool: ${nextTool.name}`);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        type: 'payment_required',\n                        assistant_message: `Processing task ${nextTaskIndex + 1} of ${total_tools}...`,\n                        tool: {\n                            id: nextTool.id,\n                            name: nextTool.name,\n                            cost_usd: parseFloat(nextTool.cost_usd),\n                            provider_address: nextTool.provider_address || '0x0000000000000000000000000000000000000000',\n                            input: nextTask.input\n                        },\n                        tool_call_id: nextToolCallId\n                    });\n                } else {\n                    console.log(`‚ùå Tool \"${nextTask.tool_id}\" not found in database!`);\n                }\n            } else if (plan && tools_completed === total_tools - 1) {\n                // All tools complete - clear metadata and proceed to synthesis\n                await pool.query('UPDATE s402_chat_sessions SET metadata = NULL WHERE id = $1', [\n                    chat_session_id\n                ]);\n            }\n        }\n        // === SYNTHESIS: All tools complete or no plan, call Claude to format results ===\n        const agentResult = await pool.query('SELECT name, description FROM s402_agents WHERE id = $1', [\n            agentId\n        ]);\n        const agentName = agentResult.rows[0]?.name || 'AI Assistant';\n        const agentDesc = agentResult.rows[0]?.description || 'You are a helpful AI assistant powered by s402 oracle data.';\n        const systemPrompt = `You are \"${agentName}\" - ${agentDesc}\n\n**IMPORTANT: You just received data from paid API tools. Present it beautifully:**\n\n**For Images:**\n- Automatically embed images using markdown: ![description](url)\n- Use hdurl for high-res when available, fallback to url\n- Add engaging captions and context\n\n**For Text/Data:**\n- Write conversationally like a helpful AI, NOT like a robot\n- Use **bold** for titles and emphasis\n- Format long text into readable paragraphs\n- Present lists with bullet points or numbers\n- Group related information together\n\n**Examples:**\n‚úÖ GOOD: \"Here's today's Astronomy Picture! ![Witch's Broom Nebula](url) Ten thousand years ago, a supernova created this stunning remnant...\"\n‚ùå BAD: \"Tool executed successfully! Result: {success: true, data: {...}}\"\n\n‚úÖ GOOD: \"I found 3 great breweries in Kamloops: ‚Ä¢ **Iron Road Brewing** - Craft brewery... ‚Ä¢ **Noble Pig Brewhouse** - Award-winning...\"\n‚ùå BAD: \"breweries: [{name: 'Iron Road', type: 'micro'}, ...]\"\n\nBe conversational, engaging, and make the data easy to understand. Never show raw JSON.`;\n        // Retry helper\n        const retryWithBackoff = async (fn, maxRetries = 3)=>{\n            const delays = [\n                1000,\n                2000,\n                4000\n            ];\n            let lastError;\n            for(let i = 0; i < maxRetries; i++){\n                try {\n                    return await fn();\n                } catch (error) {\n                    lastError = error;\n                    if ((error.status === 529 || error.status >= 500 && error.status < 600) && i < maxRetries - 1) {\n                        console.log(`‚ö†Ô∏è Anthropic API ${error.status} error, retrying in ${delays[i]}ms...`);\n                        await new Promise((resolve)=>setTimeout(resolve, delays[i]));\n                        continue;\n                    }\n                    throw error;\n                }\n            }\n            throw lastError;\n        };\n        let reply;\n        try {\n            const response = await retryWithBackoff(()=>anthropic.messages.create({\n                    model: DEFAULT_MODEL_STR,\n                    max_tokens: 2048,\n                    system: systemPrompt,\n                    messages: cleanedHistory\n                }));\n            const textContent = response.content.find((c)=>c.type === 'text');\n            reply = textContent ? textContent.text : 'I received the data but could not process it.';\n        } catch (error) {\n            console.error('‚ùå Claude API unavailable:', error.status, error.message);\n            reply = toolOutput ? `‚úÖ Tool executed successfully!\\n\\nResult: ${JSON.stringify(toolOutput, null, 2)}` : '‚ö†Ô∏è Tool executed but synthesis failed.';\n        }\n        // Store synthesis reply\n        await pool.query('INSERT INTO s402_agent_chats (agent_id, session_id, role, content) VALUES ($1, $2, $3, $4)', [\n            agentId,\n            chat_session_id,\n            'assistant',\n            reply\n        ]);\n        // Update agent stats\n        await pool.query('UPDATE s402_agents SET total_spent_usd = total_spent_usd + $1, query_count = query_count + 1, last_active_at = NOW() WHERE id = $2', [\n            parseFloat(tool.cost_usd),\n            agentId\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            type: 'message',\n            content: reply,\n            tool_output: toolOutput\n        });\n    } catch (error) {\n        console.error('Tool execution error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to execute tool'\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/agents/[id]/execute-tool/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&page=%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&page=%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _home_runner_workspace_scan_frontend_app_api_agents_id_execute_tool_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/agents/[id]/execute-tool/route.ts */ \"(rsc)/./app/api/agents/[id]/execute-tool/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_home_runner_workspace_scan_frontend_app_api_agents_id_execute_tool_route_ts__WEBPACK_IMPORTED_MODULE_16__]);\n_home_runner_workspace_scan_frontend_app_api_agents_id_execute_tool_route_ts__WEBPACK_IMPORTED_MODULE_16__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/agents/[id]/execute-tool/route\",\n        pathname: \"/api/agents/[id]/execute-tool\",\n        filename: \"route\",\n        bundlePath: \"app/api/agents/[id]/execute-tool/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/home/runner/workspace/scan/frontend/app/api/agents/[id]/execute-tool/route.ts\",\n    nextConfigOutput,\n    userland: _home_runner_workspace_scan_frontend_app_api_agents_id_execute_tool_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/agents/[id]/execute-tool/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&page=%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = import("pg");;

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/@anthropic-ai"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&page=%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bid%5D%2Fexecute-tool%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace%2Fscan%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();