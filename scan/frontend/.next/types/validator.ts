// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/agents/my/[id]/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agents/my/[id]/settings">> = Specific
  const handler = {} as typeof import("../../app/agents/my/[id]/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/agents/my/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agents/my">> = Specific
  const handler = {} as typeof import("../../app/agents/my/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/agents/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agents">> = Specific
  const handler = {} as typeof import("../../app/agents/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/composer/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/composer/admin">> = Specific
  const handler = {} as typeof import("../../app/composer/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/composer/agent/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/composer/agent/[id]">> = Specific
  const handler = {} as typeof import("../../app/composer/agent/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/composer/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/composer">> = Specific
  const handler = {} as typeof import("../../app/composer/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/composers/[address]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/composers/[address]">> = Specific
  const handler = {} as typeof import("../../app/composers/[address]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/composers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/composers">> = Specific
  const handler = {} as typeof import("../../app/composers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/data-sources/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/data-sources">> = Specific
  const handler = {} as typeof import("../../app/data-sources/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ecosystem/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ecosystem">> = Specific
  const handler = {} as typeof import("../../app/ecosystem/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/marketplace/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/marketplace">> = Specific
  const handler = {} as typeof import("../../app/marketplace/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/transactions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/transactions">> = Specific
  const handler = {} as typeof import("../../app/transactions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/check/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/check">> = Specific
  const handler = {} as typeof import("../../app/api/admin/check/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/tools/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/tools">> = Specific
  const handler = {} as typeof import("../../app/api/admin/tools/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/verify">> = Specific
  const handler = {} as typeof import("../../app/api/admin/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]/chat">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/execute-tool/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]/execute-tool">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/execute-tool/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/sessions/[sessionId]/messages/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]/sessions/[sessionId]/messages">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/sessions/[sessionId]/messages/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/sessions/[sessionId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]/sessions/[sessionId]">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/sessions/[sessionId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/sessions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]/sessions">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/sessions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/[id]/tools/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents/[id]/tools">> = Specific
  const handler = {} as typeof import("../../app/api/agents/[id]/tools/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agents/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agents">> = Specific
  const handler = {} as typeof import("../../app/api/agents/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/composer/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/composer">> = Specific
  const handler = {} as typeof import("../../app/api/auth/composer/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/charts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/charts">> = Specific
  const handler = {} as typeof import("../../app/api/charts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/composers/top/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/composers/top">> = Specific
  const handler = {} as typeof import("../../app/api/composers/top/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/images/[filename]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/images/[filename]">> = Specific
  const handler = {} as typeof import("../../app/api/images/[filename]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/services/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/services">> = Specific
  const handler = {} as typeof import("../../app/api/services/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/activate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/activate">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/activate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/active/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/active">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/active/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/cleanup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/cleanup">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/cleanup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/close/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/close">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/close/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/create">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/deactivate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/deactivate">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/deactivate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/fund/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/fund">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/fund/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/pay/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/pay">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/pay/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sessions/refund/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sessions/refund">> = Specific
  const handler = {} as typeof import("../../app/api/sessions/refund/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/stats">> = Specific
  const handler = {} as typeof import("../../app/api/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/tools/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/tools">> = Specific
  const handler = {} as typeof import("../../app/api/tools/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/transactions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/transactions">> = Specific
  const handler = {} as typeof import("../../app/api/transactions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/composer/agent/[id]/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/composer/agent/[id]">> = Specific
  const handler = {} as typeof import("../../app/composer/agent/[id]/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
